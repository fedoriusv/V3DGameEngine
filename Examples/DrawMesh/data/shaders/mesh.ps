struct PS_INPUT 
{
    float4 Position  : SV_POSITION;
    float3 Normal    : NORMAL;
    float2 UV        : TEXTURE;
    float3 View      : VIEW;
    float3 Light     : LIGHT;
};

SamplerState samplerColor : register(s1);
Texture2D textureColor    : register(t2);

float4 main(PS_INPUT Input) : SV_TARGET0
{
    float4 OutColor;
    OutColor = textureColor.Sample(samplerColor, Input.UV);

    float3 N = normalize(Input.Normal);
    float3 L = normalize(Input.Light);
    float3 V = normalize(Input.View);
    float3 R = reflect(-L, N);
    float3 diffuse = max(dot(N, L), 0.0) * float3(1.0, 1.0, 1.0);
    float3 specular = pow(max(dot(R, V), 0.0), 16.0) * float3(0.75, 0.75, 0.75);
    
    //return float4(diffuse * OutColor.rgb + specular, 1.0);
    return OutColor;
}