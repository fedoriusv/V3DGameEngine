##############################################################
#ThirdParty
##############################################################

set(THIRD_PARTY_LIB_DEFINE "")
set(THIRD_PARTY_LIB_INCLUDE_SUFFIX "")

#Json
set(THIRD_PARTY_LIB_INCLUDE_SUFFIX "${THIRD_PARTY_LIB_INCLUDE_SUFFIX}" "json/include")

#DirectXMath
if(DIRECTX_MATH_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_DIRECTX_MATH")
endif()

#Stb
if(STB_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_STB")
endif()

#Gli
if(GLI_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_GLI")
    set(THIRD_PARTY_LIB_INCLUDE_SUFFIX "${THIRD_PARTY_LIB_INCLUDE_SUFFIX}" "glm")
endif()

#Assimp
if(ASSIMP_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_ASSIMP")
endif()

#HWCPipe
if(HWCPipe_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_HWC_PIPE")
endif()

#DirectXShaderCompiler
if(DXCompiler_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_CUSTOM_DXC")
endif()

#Tracy
if(PROFILER_TRACY_LIB)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DTRACY_ENABLE")
	set(THIRD_PARTY_LIB_INCLUDE_SUFFIX "${THIRD_PARTY_LIB_INCLUDE_SUFFIX}" "tracy/public")
	option(TRACY_ON_DEMAND "On-demand profiling" ON)
endif()

#imgui
if(IMGUI_SOURCE)
    set(THIRD_PARTY_LIB_DEFINE "${THIRD_PARTY_LIB_DEFINE} -DUSE_IMGUI")
	set(THIRD_PARTY_SOURCE_INCLUDE_SUFFIX "${THIRD_PARTY_SOURCE_INCLUDE_SUFFIX}" "imgui")
endif()